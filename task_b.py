# -*- coding: utf-8 -*-
"""task b

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ATF5Oca3ziPeavEBTl0iVQ6EGDyrLzWW
"""

#Load sample data using `pandas`
import pandas as pd # Import required libraries
from sklearn.datasets import load_iris

iris = load_iris() # Load the Iris dataset
df = pd.DataFrame(iris.data, columns=iris.feature_names) # Create a DataFrame from the dataset
df['species'] = iris.target # Add the target (species) column
print(df.head())

#Preprocess the data (e.g., scaling) with `scikit-learn`
# Splitting the Data and Feature Scaling
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler

X_train, X_test, y_train, y_test = train_test_split(df.iloc[:, :-1], df['species'], test_size=0.3)
# Apply standard scaling (Normalization) to standardize feature values
scaler = StandardScaler().fit(X_train)
X_train = scaler.transform(X_train)
X_test = scaler.transform(X_test)

#Build the model using libraries like `scikit-learn`, `TensorFlow`, or `PyTorch`
from sklearn.linear_model import LogisticRegression
# Initialize and train the logistic regression model
model = LogisticRegression()
model.fit(X_train, y_train)
# Evaluate the model on the test set
print(f"Accuracy: {model.score(X_test, y_test)}")

#Validate the model and plot results using `matplotlib` or `seaborn`
import matplotlib.pyplot as plt
import seaborn as sns
# Create a pairplot to visualize feature relationships
sns.pairplot(df, hue="species")
plt.show()